---
###### Variables to be passed to this playbook ######
#
#  username: [BIG-IP username]
#  password: [BIG-IP password]
#  appsvcs_major: [iApp Implementation Layer Major Version Number]
#  appsvcs_minor: [iApp Implementation Layer Minor Version Number]
#  appsvcs_pres: [iApp Presentation Layer Version Number]
#  appsvcs_file: [iApp file name]
#  appsvcs_source: [URL to the iApp]
#  appsvcs_ver: [iApp version as reported via BIG-IP REST API]
#
#
#  Examples:
#  username: admin
#  password: admin
#  appsvcs_major: "2.0"
#  appsvcs_minor: "002"
#  appsvcs_pres: "001"
#  appsvcs_file: appsvcs_integration_v{{ appsvcs_major }}-{{ appsvcs_minor }}_{{ appsvcs_pres }}.tmpl
#  appsvcs_source: http://appsvcs-integration-iapp.readthedocs.io/en/v2.0_001/_static/appsvcs_integration_v{{ appsvcs_major }}-{{ appsvcs_minor }}_{{ appsvcs_pres }}.tmpl
#  appsvcs_ver: appsvcs_integration_v{{ appsvcs_major }}_{{ appsvcs_pres }}
#
#
#  In the above example, "appsvcs_integration_v{{ appsvcs_major }}-{{ appsvcs_minor }}_{{ appsvcs_pres }}.tmpl" returns,
#  "appsvcs_integration_v2.0-002_001.tmpl"
#
#
#  For more imformation on iApp versions, read: http://appsvcs-integration-iapp.readthedocs.io/en/latest/design.html#versioning
#
# Author: Nathan Pearce
###### https://github.com/npearce/F5-iApps_and_Ansible-playbooks ######

- name: Check {{ appsvcs_ver }} isn't already there
  connection: local
  gather_facts: no
  hosts: bigips
  tasks:
    - name: Get the templates
      uri:
        url: https://{{inventory_hostname}}/mgmt/tm/cloud/templates/iapp/
        validate_certs: no
        user: "{{ username}}"
        password: "{{ password }}"
        return_content: yes
      register: iapps_list

## Example of how to look for a specific string in the response using a 'when' statement.
    - name: Check {{ appsvcs_ver }} IS in response
      fail: msg="{{ appsvcs_ver }} found. Aborting installation!"
      when: '"{{ appsvcs_ver }}" in (iapps_list.content|from_json)["items"]'

## Example of check a specific string is NOT in the response using a 'when' statement.
    - name: Check {{ appsvcs_ver }} IS NOT in response
      debug: msg="'{{ appsvcs_ver }}' not found"
      when: '"{{ appsvcs_ver }}" not in (iapps_list.content|from_json)["items"]'

- name: Perform the installation
  hosts: bigips
  tasks:
    ## This is where we fetch the iApp from a HTTP link and push it to the BIG-IP
    - name: Push iApp to BIG-IP
      get_url:
        validate_certs: no
        url: "{{appsvcs_source}}"
        dest: /var/tmp/
    ## Execute the tmsh command to install the iApp from /var/tmp
    ## This is necessary because you cannot upload an iApp via the REST API.
    - name: "Install iApp"
      shell: "tmsh load /sys application template /var/tmp/{{ appsvcs_file }}"

# Check that it worked by retrieving the iApp list via the REST API
- name: Verify {{appsvcs_file}} Installation
  hosts: bigips
  connection: local
  tasks:
    - name: Get the templates
      uri:
        url: https://{{inventory_hostname}}/mgmt/tm/cloud/templates/iapp/
        validate_certs: no
        user: "{{ username}}"
        password: "{{ password }}"
        return_content: yes
      register: iapps_list

    - name: Check ISN't response
      fail: msg="{{ appsvcs_ver }} not found.  Installation Failed!"
      when: '"{{ appsvcs_ver }}" not in (iapps_list.content|from_json)["items"]'

    - name: Check if {{appsvcs_ver}} is installed
      debug: msg="{{ appsvcs_ver }} found.  Installation Successful!"
      when: '"{{ appsvcs_ver }}" in (iapps_list.content|from_json)["items"]'

# If ths install was successfull delete the iApp file from /var/tmp
- name: Success cleanup
  hosts: bigips
  gather_facts: no
  tasks:
    - name: deleting {{appsvcs_file}}
      file:
        path='/var/tmp/{{appsvcs_file}}'
        state=absent
        force=true
